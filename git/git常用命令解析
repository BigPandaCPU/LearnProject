文字参考：https://blog.csdn.net/on2way/article/details/78682225
视频讲解参考：https://www.bilibili.com/video/BV1XP4y147v1?p=8&spm_id_from=pageDriver

常用命令解析：
1.配置用户信息
$ git config --global user.name "John Doe"
$ git config --global user.email johndoe@example.com

2.查看配置信息
git config list

...
credential.helper=manager-core
credential.https://dev.azure.com.usehttppath=true
user.email=******@qq.com
user.name=*****
...

3.查看当前文件状态
git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

显示有文件commit，但是没有push

4.版本回退
git add . 操作之后，想撤销， git reset HEAD

git reset --hard HEAD~2 当前版本基础上回退两个

git reset --hard 879d7 切换到指定版本

5. 查看log
git log -5 --pretty=oneline  查看最近的5条log
git reflog   查看版本变化
2d32ac5 (HEAD -> master) HEAD@{0}: commit: git学习笔记
6b5be72 (origin/master, origin/HEAD) HEAD@{1}: reset: moving to 6b5be72
6b5be72 (origin/master, origin/HEAD) HEAD@{2}: reset: moving to 6b5be72
7e949e8 HEAD@{3}: reset: moving to HEAD~2
78f7978 HEAD@{4}: reset: moving to HEAD~3
6b5be72 (origin/master, origin/HEAD) HEAD@{5}: reset: moving to 6b5be72
132595d HEAD@{6}: reset: moving to HEAD~2
6b5be72 (origin/master, origin/HEAD) HEAD@{7}: commit: 修改readme
bc62347 HEAD@{8}: commit: 背包问题，回溯算法求解，求解最佳方案时，全局的path变量会出错
132595d HEAD@{9}: commit: leetcode整数拆分算法


6. 本地已经commit的文件，但是没有push到远程仓库，工作区误删除，如何恢复

git checkout -- 误删除文件名
git checkout -- git_learn_doc.txt

7.删除文件
git rm git_learn_doc.txt #在本地仓库、工作区删除文件


echo "# GitLearn" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main  # m命名为main分支
git remote add origin git@github.com:BigPandaCPU/GitLearn.git 将本地仓促和远端仓库关联
git push -u origin main  #将本地保存，提交到远程仓库

8.ssh生成公钥和私钥
ssh-keygen -t rsa -c "邮箱"

判断是否添加成功
ssh -T git@github.com

9. 本地分支创建、合并、删除
git checkout master  #切换到master分支
git checkout -b new_brance #创建并切换到new_brance分支
git branch -d  master #删除master分支
git brance #查看所有分支
git merge main#将main分支合并到当前分支
git brance -m | -M  oldbranch newbrance #重命名分支，如果newbrance分支已经存在，则需要使用-M强制重命名，否则，使用-m进行重名

10.分支push和pull操作
    1）git branch -a #查看本地和远程分支
    2）git push origin local_branch #将本地的local_branch推送到远程分支上
    3）git push origin :remote_brance #将远程remote_brance删除
    4）git checkout -b local_branch origin/remote_branch #将远程分支下载到本地
11.跟踪分支
git branch -vv
* ll     dded44b [origin/leaf01] 提交git03
  main   dded44b [origin/main] 提交git03
  master dded44b [origin/master] 提交git03
#本地的ll分支跟踪origin/leaf01
#...

12. 分支操作冲突与解决
    1）本地分支冲突
    合并的时候，会将冲突的内容显示到一起，手动去修改，然后add 、 commit
    查看分支合并图：
    查看的时候 git log --graph --pretty=oneline

    2）多人协同操作冲突
    提交之前先pull，然后解决冲突，在push

13.标签管理
    标签管理，表示一个版本已经开发完成，可以发布了。打上一个标签。每一个标签对应一个具体时间的代码
    1）git tag   #查看所有标签
    2）git tag v1.0 #创建一个v1.0的标签,（提交后才会在远程仓库的release下有相应的标签对应的版本）
    3）git tag -a tag_name -m "标签描述" #创建一个标签，名为tag_name,并添加标签描述符。
    4）git tag -d tag_name  #删除本地标签
    5）git push origin tag_name #将本地标签推送到远程
    6）git push origin --tags #将所有标签推送到远程
    7）git push origin :refs/tags/tag_name #删除远程的tag_name标签